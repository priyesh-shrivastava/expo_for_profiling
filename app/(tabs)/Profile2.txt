import React, { useState } from "react";
import {
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";

interface Achievement {
  id: string;
  title: string;
  description: string;
  progress: number; // 0-100
  isCompleted: boolean;
}

const ProfilePage = () => {
  // State for basic user information
  const [userName, setUserName] = useState<string>("Alex Johnson");
  const [userBio, setUserBio] = useState<string>(
    "Adventure seeker and code explorer. Passionate about mobile development and open-source projects."
  );
  const [followers, setFollowers] = useState<number>(1234);
  const [following, setFollowing] = useState<number>(256);
  const [posts, setPosts] = useState<number>(78);
  const [isEditingProfile, setIsEditingProfile] = useState<boolean>(false);

  // State for achievement trackers
  const [achievements, setAchievements] = useState<Achievement[]>([
    {
      id: "1",
      title: "First Step",
      description: "Completed your first tutorial.",
      progress: 100,
      isCompleted: true,
    },
    {
      id: "2",
      title: "Code Master Initiate",
      description: "Solved 10 programming challenges.",
      progress: 75,
      isCompleted: false,
    },
    {
      id: "3",
      title: "Community Contributor",
      description: "Made 5 meaningful contributions.",
      progress: 30,
      isCompleted: false,
    },
    {
      id: "4",
      title: "Bug Hunter Pro",
      description: "Reported 10 bugs.",
      progress: 100,
      isCompleted: true,
    },
    {
      id: "5",
      title: "Pixel Perfect",
      description: "Achieved a perfect UI score in 3 projects.",
      progress: 50,
      isCompleted: false,
    },
  ]);

  // Toggle edit mode
  const handleEditProfile = () => {
    setIsEditingProfile(!isEditingProfile);
  };

  // Progress updater
  const handleAchievementProgress = (id: string) => {
    setAchievements((prev) =>
      prev.map((ach) => {
        if (ach.id === id && !ach.isCompleted) {
          const newProgress = Math.min(ach.progress + 25, 100);
          return {
            ...ach,
            progress: newProgress,
            isCompleted: newProgress === 100,
          };
        }
        return ach;
      })
    );
  };

  return (
    <ScrollView style={styles.scrollView}>
      {/* Profile Info Card */}
      <View style={styles.profileCard}>
        <View style={[styles.row, { marginBottom: 16 }]}>
          {/* Avatar */}
          <View style={styles.avatar}>
            <Text style={styles.avatarText}>AJ</Text>
          </View>
          <View style={{ flex: 1 }}>
            <Text style={styles.profileName}>{userName}</Text>
            <Text style={styles.profileStatus}>
              {isEditingProfile ? "Editing Profile" : "View Profile"}
            </Text>
          </View>
        </View>

        <Text style={styles.bio}>{userBio}</Text>

        {/* Stats */}
        <View style={styles.stats}>
          <View style={{ alignItems: "center" }}>
            <Text style={styles.statNumber}>{followers}</Text>
            <Text style={styles.statLabel}>Followers</Text>
          </View>

          <View style={styles.statDivider} />

          <View style={{ alignItems: "center" }}>
            <Text style={styles.statNumber}>{following}</Text>
            <Text style={styles.statLabel}>Following</Text>
          </View>

          <View style={styles.statDivider} />

          <View style={{ alignItems: "center" }}>
            <Text style={styles.statNumber}>{posts}</Text>
            <Text style={styles.statLabel}>Posts</Text>
          </View>
        </View>

        {/* Edit Profile */}
        <TouchableOpacity style={styles.editBtn} onPress={handleEditProfile}>
          <Text style={styles.editBtnText}>
            {isEditingProfile ? "Save Changes" : "Edit Profile"}
          </Text>
        </TouchableOpacity>
      </View>

      {/* Achievements */}
      <View style={styles.achievementCard}>
        <Text style={styles.achievementsTitle}>Achievements</Text>

        {achievements.map((achievement) => (
          <TouchableOpacity
            key={achievement.id}
            style={styles.achievementItem}
            onPress={() => handleAchievementProgress(achievement.id)}
          >
            <View style={styles.achievementIcon}>
              <Text style={styles.achievementIconText}>üèÜ</Text>
            </View>

            <View style={{ flex: 1 }}>
              <View style={styles.achievementHeader}>
                <Text style={styles.achievementTitle}>
                  {achievement.title}
                </Text>
                <Text
                  style={
                    achievement.isCompleted
                      ? styles.achievementStatusCompleted
                      : styles.achievementStatusProgress
                  }
                >
                  {achievement.isCompleted
                    ? "Completed"
                    : `${achievement.progress}%`}
                </Text>
              </View>
              <Text style={styles.achievementDescription}>
                {achievement.description}
              </Text>

              <View style={styles.progressBg}>
                <View
                  style={[
                    styles.progressFill,
                    { width: `${achievement.progress}%` },
                  ]}
                />
              </View>
            </View>
          </TouchableOpacity>
        ))}
      </View>
    </ScrollView>
  );
};

export default ProfilePage;

/* --------------------------
      Stylesheet
--------------------------- */
const styles = StyleSheet.create({
  scrollView: {
    flex: 1,
    backgroundColor: "#020617", // slate-950
    padding: 16,
  },
  profileCard: {
    backgroundColor: "#0f172a",
    borderRadius: 12,
    padding: 24,
    marginBottom: 24,
    borderWidth: 1,
    borderColor: "#1e40af",
    shadowColor: "#000",
    shadowOpacity: 0.5,
    shadowRadius: 6,
    shadowOffset: { width: 0, height: 2 },
  },
  row: {
    flexDirection: "row",
    alignItems: "center",
  },
  avatar: {
    backgroundColor: "#e5e7eb",
    borderWidth: 2,
    borderStyle: "dashed",
    borderColor: "#9ca3af",
    borderRadius: 9999,
    width: 80,
    height: 80,
    marginRight: 16,
    alignItems: "center",
    justifyContent: "center",
  },
  avatarText: {
    color: "#4b5563",
    fontSize: 18,
    fontWeight: "bold",
  },
  profileName: {
    color: "#ffffff",
    fontSize: 16,
  },
  profileStatus: {
    color: "#60a5fa",
    fontSize: 14,
  },
  bio: {
    color: "#d1d5db",
    fontSize: 16,
    lineHeight: 22,
    marginBottom: 16,
  },
  stats: {
    flexDirection: "row",
    justifyContent: "space-around",
    alignItems: "center",
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: "#1e40af",
    paddingVertical: 12,
    marginBottom: 24,
  },
  statNumber: {
    color: "#ffffff",
    fontSize: 20,
    fontWeight: "bold",
  },
  statLabel: {
    color: "#9ca3af",
    fontSize: 14,
  },
  statDivider: {
    width: 1,
    height: 40,
    backgroundColor: "#1e40af",
    marginHorizontal: 16,
  },
  editBtn: {
    backgroundColor: "#1d4ed8",
    padding: 12,
    borderRadius: 8,
    alignItems: "center",
  },
  editBtnText: {
    color: "#ffffff",
    fontSize: 18,
    fontWeight: "600",
  },
  achievementCard: {
    backgroundColor: "#0f172a",
    borderRadius: 12,
    padding: 24,
    borderWidth: 1,
    borderColor: "#1e40af",
    shadowColor: "#000",
    shadowOpacity: 0.5,
    shadowRadius: 6,
    shadowOffset: { width: 0, height: 2 },
  },
  achievementsTitle: {
    color: "#ffffff",
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  achievementItem: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#1e293b",
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: "#1e3a8a",
    shadowColor: "#000",
    shadowOpacity: 0.4,
    shadowRadius: 3,
    shadowOffset: { width: 0, height: 1 },
  },
  achievementIcon: {
    backgroundColor: "#e5e7eb",
    borderWidth: 2,
    borderStyle: "dashed",
    borderColor: "#9ca3af",
    borderRadius: 8,
    width: 64,
    height: 64,
    marginRight: 16,
    alignItems: "center",
    justifyContent: "center",
  },
  achievementIconText: {
    color: "#4b5563",
    fontSize: 20,
  },
  achievementHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 4,
  },
  achievementTitle: {
    color: "#ffffff",
    fontSize: 18,
    fontWeight: "600",
  },
  achievementStatusCompleted: {
    color: "#34d399",
    fontSize: 14,
    fontWeight: "500",
  },
  achievementStatusProgress: {
    color: "#fb923c",
    fontSize: 14,
    fontWeight: "500",
  },
  achievementDescription: {
    color: "#9ca3af",
    fontSize: 14,
    marginBottom: 8,
  },
  progressBg: {
    width: "100%",
    backgroundColor: "#374151",
    borderRadius: 9999,
    height: 8,
  },
  progressFill: {
    backgroundColor: "#2563eb",
    borderRadius: 9999,
    height: "100%",
  },
});
